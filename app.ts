// Define the Abjad values for Arabic letters.
const abjadMapping: { [letter: string]: number } = {
    "ا": 1,
    "ب": 2,
    "ج": 3,
    "د": 4,
    "ه": 5,
    "و": 6,
    "ز": 7,
    "ح": 8,
    "ط": 9,
    "ي": 10,
    "ك": 20,
    "ل": 30,
    "م": 40,
    "ن": 50,
    "س": 60,
    "ع": 70,
    "ف": 80,
    "ص": 90,
    "ق": 100,
    "ر": 200,
    "ش": 300,
    "ت": 400,
    "ث": 500,
    "خ": 600,
    "ذ": 700,
    "ض": 800,
    "ظ": 900,
    "غ": 1000
  };
  
  /**
   * Calculate the Abjad numeral sum for a given Arabic text.
   * (Any characters not in the mapping are ignored.)
   */
  function calculateAbjad(text: string): number {
    let sum = 0;
    for (const char of text) {
      if (abjadMapping[char]) {
        sum += abjadMapping[char];
      }
    }
    return sum;
  }
  
  /**
   * Validate a candidate word by POSTing to the given API endpoint.
   * The API is expected to return JSON with a boolean property "isValid".
   */
//   async function validateWord(word: string): Promise<boolean> {
//     try {
//       const response = await fetch("https://example.com/validateWord", {
//         method: "POST",
//         headers: {
//           "Content-Type": "application/json"
//         },
//         body: JSON.stringify({ word })
//       });
//       const data = await response.json();
//       return data.isValid;
//     } catch (error) {
//       console.error("Error validating word:", error);
//       return false;
//     }
//   }
  
  /**
   * Given a target number, search for candidate word(s) (up to maxWordLength letters)
   * whose Abjad numeral sum equals the target.
   *
   * This is a naive backtracking approach. For every candidate that reaches the target sum,
   * the candidate is sent to the API endpoint for validation.
   */
  async function findValidWordsForNumber(target: number, maxWordLength: number = 4): Promise<string[]> {
    const validWords: string[] = [];
  
    // Recursive helper function.
    async function search(currentWord: string, currentSum: number) {
      // When the current sum equals the target and we have at least one letter,
      // check if the candidate word is valid.
      if (currentSum === target && currentWord.length > 0) {
        if (await validateWord(currentWord)) {
          validWords.push(currentWord);
        }
        // Do not extend further once the target is reached.
        return;
      }
      // Stop searching if the word is too long or if the sum exceeds the target.
      if (currentWord.length >= maxWordLength || currentSum > target) {
        return;
      }
      // Try adding each letter in turn.
      for (const letter of Object.keys(abjadMapping)) {
        await search(currentWord + letter, currentSum + abjadMapping[letter]);
      }
    }
  
    await search("", 0);
    return validWords;
  }
  
  /* ----- UI Event Handlers ----- */
  document.addEventListener("DOMContentLoaded", () => {
    // Section 1: Calculate Abjad numeral for a given Arabic text.
    const arabicTextInput = document.getElementById("arabicText") as HTMLInputElement;
    const calculateAbjadBtn = document.getElementById("calculateAbjadBtn") as HTMLButtonElement;
    const abjadResultDiv = document.getElementById("abjadResult") as HTMLDivElement;
  
    calculateAbjadBtn.addEventListener("click", () => {
      const text = arabicTextInput.value;
      const sum = calculateAbjad(text);
      abjadResultDiv.textContent = `حساب الجمل: ${sum}`;
    });
  
    // Section 2: Given a number, find valid Arabic word(s) whose Abjad sum equals that number.
    const targetNumberInput = document.getElementById("targetNumber") as HTMLInputElement;
    const findWordBtn = document.getElementById("findWordBtn") as HTMLButtonElement;
    const wordResultDiv = document.getElementById("wordResult") as HTMLDivElement;
  
    findWordBtn.addEventListener("click", async () => {
      const targetNumber = parseInt(targetNumberInput.value);
      if (isNaN(targetNumber) || targetNumber <= 0) {
        wordResultDiv.textContent = "Please enter a valid positive number.";
        return;
      }
      wordResultDiv.textContent = "Searching for valid words...";
      const validWords = await findValidWordsForNumber(targetNumber, 3);
      if (validWords.length > 0) {
        wordResultDiv.textContent = `قائمة الكلمات الممكنة: ${validWords.join(", ")}`;
      } else {
        wordResultDiv.textContent = "لا توجد أي كلمة صحيحة.";
      }
    });
  });
  
  /**
 * Validates an Arabic word of maximum 4 letters.
 * - Trims the input.
 * - Checks if the word length is between 1 and 4 (counting actual Unicode characters).
 * - Optionally verifies that the word consists solely of Arabic characters.
 * - Checks if the word is in the allowed list.
 *
 * @param word - The Arabic word to validate.
 * @returns True if the word is valid; otherwise, false.
 */
function validateWord(word: string): boolean {
    // Remove leading/trailing whitespace.
    const trimmedWord = word.trim();
  
    // Count the letters using Array.from (which correctly handles Unicode code points).
    const letters = Array.from(trimmedWord);
    if (letters.length === 0 || letters.length > 4) {
      return false;
    }
  
    // Optionally, check if the word contains only Arabic letters.
    // The Arabic Unicode block roughly covers U+0600 to U+06FF.
    const arabicRegex = /^[\u0600-\u06FF]+$/;
    if (!arabicRegex.test(trimmedWord)) {
      return false;
    }
  
    // List of valid Arabic words (maximum 4 letters).
    // Extend this list as needed.
    const validWords = new Set([
        "في",
        "من",
        "على",
        "عن",
        "مع",
        "هو",
        "هي",
        "ما",
        "لم",
        "لا",
        "كل",
        "قد",
        "ثم",
        "هذا",
        "ذلك",
        "هناك",
        "هنا",
        "كيف",
        "أين",
        "أي",
        "إذا",
        "لكن",
        "بل",
        "حتى",
        "غير",
        "بعد",
        "قبل",
        "علم",
        "درس",
        "كتب",
        "شرب",
        "أكل",
        "ذهب",
        "جلس",
        "نام",
        "قام",
        "رقد",
        "ضحك",
        "بكى",
        "بيت",
        "باب",
        "قلم",
        "شمس",
        "قمر",
        "نور",
        "ليل",
        "ورد",
        "فجر",
        "رجع",
        "صار",
        "بدا",
        "وجد",
        "نظر",
        "أب",
        "أ",
        "سأل",
        "أخذ",
        "عند",
        "من",
"في",
"عن",
"لا",
"لم",
"لن",
"يا",
"أم",
"أو",
"قد",
"هل",
"إن",
"هو",
"هي",
"ما",
"حق",
"شر",
"فن",
"جد",
"أنا",
"أنت",
"هم",
"هن",
"بيت",
"باب",
"قلب",
"عين",
"نهر",
"بحر",
"جبل",
"قمر",
"شمس",
"نجم",
"علم",
"دين",
"حرب",
"قلم",
"ورد",
"شجر",
"فجر",
"خير",
"سهم",
"ريح",
"حلم",
"ملك",
"شعر",
"روح",
"فن",
"شوق",
"بدر",
"ليل",
"صباح",
"فكر",
"عرف",
"وجد",
"زاد",
"عاد",
"شكر",
"رأي",
"نور",
"عهد",
"صدق",
"كلم",
"ذكر",
"أنس",
"قصد",
"فوز",
"رشد",
"صبر",
"حزن",
"فرح",
"وقت",
"درب",
"سور",
"خطر",
"سلام",
"حسن",
"ولد",
"بنت",
"أكل",
"شرب",
"جلس",
"قام",
"خرج",
"دخل",
"قرأ",
"كتب",
"سمع",
"نظر",
"مشى",
"رسم",
"ضحك",
"بكى",
"نام",
"لبس",
"صار",
"رجع",
"عاش",
"صام",
"فهم",
"سقى",
"غدا",
"ذهب",
"أخذ",
"جد",
"كتاب",
"حبيب",
"صديق",
"جمل",
"فرس",
"نخل",
"عود",
"لوز",
"فحم",
"دم",
"رعد",
"برق",
"ثوب",
"كفر",
"أرض",
"فضة",
"صقر",
"فهد",
"جذر",
"عطر",
"بعد",
"قريب",
"بعيد",
"جديد",
"قديم",
"آخر",
"أول",
"حب",
"وعد",
"أمل",
"غنى",
"عذر",
"جود",
"كرم",
"سيف",
"نصر",
"عدو",
"حكم",
"جنة",
"نار",
"ثور",
"بشر",
"طفل",
"أخ",
"ذو",
"نعم",
"رب",
"خال",
"عم",
"حلو",
"مر",
"بارد",
"دافئ",
"حار",
"جميل",
"قبيح",
"عظيم",
"صغير",
"كبير",
"قال",
"فعل",
"سعى",
"باع",
"جرى",
"حب",
"زار",
"صار",
"نسي",
"رقص",
"لعب",
"ضاع",
"بدأ",
"كسب",
"سلم",
"بطل",
"انظر",
"سجد",
"سبح",
"ماء",
"هواء",
"تراب",
"رمل",
"حطب",
"ندى",
"ضباب",
"سحاب",
"مطر",
"غيم",
"ضياء",
"سحر",
"ظل",
"رأس",
"لحم",
"خبز",
"شاي",
"قهوة",
"سكر",
"ملح",
"زيت",
"فلفل",
"بصل",
"ثوم",
"تمر",
"سمك",
"أرز",
"عدس",
"فول",
"سمن",
"حليب",
"لبن",
"صلب",
"لين",
"جاف",
"رطب",
"طازج",
"واحد",
"صفر",
"عشرة",
"سبت",
"أحد",
"سار",
"دنا",
"رفع",
"أنزل",
"رمى",
"صنع",
"قرر",
"هجم",
"سجد",
"سبح",
"كسر",
"ضرب",
"قطع",
"حكى",
"ودع",
"سكت",
"بخل",
"شاطئ",
"خشن",
"هذا",
"تلك",
"ذلك",
"ماذا",
"أين",
"كم",
"متى",
"كيف",
"لكن",
"آه",
"نظيف",
"قذر",
"عيون",
"أيدي",
"سرير",
"بنك",
"فندق",
"سهل",
"فتح",
"أغلق",
"صمِت",
"أصبح",
"وقف",
"حان",
"بلغ",
"زال",
"سعيد",
"شتاء",
"صيف",
"ربيع",
"خريف",
"طبل",
"قدر",
"لوح",
"طبخ",
"حرق",
"كبد",
"رئة",
"جرف",
"صخر",
"بحث",
"طلب",
"أعطى",
"قاد",
"هبط",
"فوق",
"تحت",
"قرب",
"بعيد",
"وسط",
"يمين",
"يسار",
"صلاة",
"هدى",
"سقِف",
"سقِف",
"سَكْف",
"سَكْت",
"وَدّع",
"سَكْت",
"كلام",
"جملة",
"قصة",
"ضمير",
"عمر",
"زمن",
"سبب",
"ضعف",
"قوة",
"مجد",
"عزة",
"كامل",
"صاف",
"عذب",
"خيط",
"قطن",
"كذب",
"خجل",
"ضجر",
"سخي",
"شفاه",
"وجه",
"حضر",
"غاب",
"وسم",
"ختم",
"نقي",
"جاب",
"صبا",
"حوض",
"ثقب",
"كوكب",
"دور",
"شكل",
"لون",
"طيف",
"مجرة",
"بصر",
"شم",
"طعن",
"همس",
"زئير",
"رقم",
"معدة",
"قند",
"كاجو",
"ماعز",
"زي",
"زر",
"وطن",
"قبس",
"لهب",
"دهن",
"مخ",
"مدى",
"حجم",
"وزن",
"طول",
"دور",
"شكل",
"لون",
"طيف",
"مجرة",
"بصر",
"شم",
"طعن",
"همس",
"زئير",
"رقم",
"معدة",
"ذرة",
"كاجو",
"ماعز",
"زي",
"زر",
"وطن",
"قبس",
"لهب",
"دهن",
"مخ",
"مدى",
"حجم",
"وزن",
"طول",
"دور",
"شكل",
"لون",
"طيف",
"مجرة",
"بصر",
"شم",
"طعن",
"همس",
"زئير",
"رقم",
"معدة",
"قند",
"كاجو",
"ماعز",
"زي",
"زر",
"وطن",
"قبس",
"لهب",
"دهن",
"مخ",
"مدى",
"حجم",
"وزن",
"طول",
"دور",
"شكل",
"لون",
"طيف",
"مجرة",
"بصر",
"شم",
"طعن",
"همس",
"زئير",
"رقم",
"معدة",
"فرد",
"شأن",
"بدن",
"طرف",
"حجر",
"غار",
"كهف",
"جذع",
"عصب",
"حاج",
"أعمى",
"نقد",
"سعي",
"سامي",
"فطن",
"بارع",
"ودود",
"خلق",
"صمم",
"بنى",
"أقام",
"حديث",
"حاد",
"مائل",
"قاطع",
"عمق",
"سطح",
"قمة",
"دور",
"شكل",
"طيف",
"مجرة",
"بصر",
"شم",
"طعن",
"همس",
"زئير",
"رقم",
"معدة",
"قند",
"كاجو",
"ماعز",
"زي",
"زر",
"وطن",
"قبس",
"لهب",
"دهن",
"مخ",
"مدى",
"حجم",
"وزن",
"طول",
"دور",
"شكل",
"لون",
"طيف",
"مجرة",
"بصر",
"شم",
"طعن",
"همس",
"زئير",
"رقم",
"معدة",
"لين",
"غرس",
"نقل",
"جاء",
"بص",
"سهم",
"رأي",
"غلب",
"وزع",
"زيد",
"وسع",
"رعى",
"غرس",
"نقل",
"جاء",
"لغة",
"سوء",
"قبح",
"طهر",
"شفق",
"ظلم",
"تين",
"حمار",
"بيض",
"عجل",
"حوت",
"ظبي",
"طائر",
"بومة",
"ساحة",
"ممر",
"ركن",
"خبر",
"جهد",
"نفع",
"ضرر",
"سعي",
"سامي",
"فطن",
"بارع",
"ودود",
"خلق",
"صمم",
"بنى",
"أقام",
"حديث",
"حاد",
"مائل",
"قاطع",
"عمق",
"سطح",
"قمة",
"دور",
"شكل",
"لون",
"طيف",
"مجرة",
"بصر",
"شم",
"طعن",
"همس",
"زئير",
"رقم",
"معدة",
"سوء",
"قبح",
"طهر",
"شفق",
"ظلم",
"تين",
"حمار",
"غنم",
"ماعز",
"زي",
"بندق",
"زر",
"وطن",
"قبس",
"لهب",
"دهن",
"مخ",
"مدى",
"حجم",
"وزن",
"طول",
"دور",
"شكل",
"لون",
"طيف",
"مجرة",
"بصر",
"شم",
"طعن",
"همس",
"زئير",
"رقم",
"معدة",
"لُؤلؤ",
"موج",
"نحت",
"أداء",
"نثر",
"جين",
"مادة",
"طاقة",
"عدد",
"طرح",
"نصف",
"سرد",
"رمي",
"أثر",
"عميق",
"فحل",
"مهر",
"فدى",
"سعد",
"ثنى",
"فنى",
"بقى",
"رأى",
"عجب",
"جمد",
"طرز",
"طلق",
"أصر",
"أكر",
"سنن",
"سير",
"حصن",
"قلع",
"ردم",
"وثب",
"أبد",
"بدد",
"سرى",
"كمل",
"راق",
"رثى",
"عزا",
"أنام",
"يقظ",
"حرس",
"أدب",
"صلح",
"رغد",
"ربى",
"بُعد",
"سعة",
"بسط",
"وفاء",
"سمو",
"شوى",
"نكت",
"أدم",
"أسر",
"لمع",
"طلق",
"أصر",
"أكر",
"سنن",
"سير",
"حصن",
"قلع",
"ردم",
"وثب",
"أبد",
"بدد",
"سرى",
"كمل",
"راق",
"رثى",
"عزا",
"أنام",
"يقظ",
"حرس",
"أدب",
"صلح",
"رغد",
"ربى",
"سريع",
"شوى",
"نكت",
"أدم",
"أسر",
"لمع",
"طلق",
"أصر",
"أكر",
"سنن",
"سير",
"حصن",
"قلع",
"ردم",
"وثب",
"أبد",
"بدد",
"سرى",
"كمل",
"راق",
"رثى",
"عزا",
"أنام",
"يقظ",
"حرس",
"أدب",
"صلح",
"رغد",
"ربى",
"فائدة",
"ودود",
"سير",
        /* … add more common words until you reach 1000 entries … */
      ]
      );
  
    return validWords.has(trimmedWord);
  }
  